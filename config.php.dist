<?php
$app->register(new Silex\Provider\DoctrineServiceProvider(), array(

		'dbs.options' => array(
			'db' => array(
				'driver'   => 'pdo_mysql',
				'dbname'   => 'DATABASE_NAME',
				'host'     => '127.0.0.1',
				'user'     => 'DATABASE_USER',
				'password' => 'DATABASE_PASS',
				'charset'  => 'utf8',
			),
		)
));

$app['asset_path'] = '/resources';

$app['application_name'] = 'Admin Generator';

// determine image path for image fields in database
// I.E field value would be image.jpg, result would be <img src="http://somepath/dist/images/image.jpg" />
$app['image_fields'] = array(
    //'table_name.field_name' => 'http://somepath/dist/images/',
);

// If the automapping of foreign key for drop down list does not the job, you can
// force a mapping here
$app['foreign_key_mapping'] = array(
    //'main_table_name.main_table_field' => 'foreign_table_name.foreign_table_field'
);

// Allow user to add additional menu links
$app['menu_links'] = array(
    //['name' => 'MENU NAME', 'url' => 'http://menu-url.com', 'fa-icon' => ''],
);

// Allow user to transform column with video url to player
$app['video_fields'] = array(
    //'your_table_name.your_column' => '',
);

// add introduction text on list page
$app['table_intro'] = array(
  //'your_table_name' => "some text"
);

$app['debug'] = true;
	// array of REGEX column name to display for foreigner key insted of ID
	// default used :'name','title','e?mail','username'
$app['usr_search_names_foreigner_key'] = array();

$app['call_to_action'] = array(
/*
  'synonyms' => array(
      0 => array(
          'btn_name' => 'btn name 1',
          'method' => 'put',
          'url' => 'http://some-url/1.0/route/{id}',
          'data'=> json_encode(array(
              'param' => value
          )),
          'callback' => 'refresh'
      ),
      1 => array(
          'btn_name' => 'btn name 2',
          'method' => 'post',
          'url' => 'http://some-url/1.0/route/{id}',
          'data'=> json_encode(array(
              'param' => value
          )),
          'callback' => 'refresh'
      )
  )
  */
);